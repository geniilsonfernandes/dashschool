generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl         = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
  shadowDatabaseUrl = env("POSTGRES_URL_NON_POOLING") // used for migrations
}

model Users {
  id         String     @id @unique @default(uuid())
  email      String     @unique
  name       String
  password   String
  created_at DateTime   @default(now())
  students   Students[]
  courses    Courses[]

  @@map("user")
}

model Students {
  id         String   @id @unique @default(uuid())
  email      String   @unique
  name       String
  password   String
  created_at DateTime @default(now())

  user_id          String
  Users            Users              @relation(fields: [user_id], references: [id])
  Courses_Students Courses_Students[]

  @@index([user_id])
  @@map("student")
}

model Courses {
  id               String             @id @unique @default(uuid())
  name             String
  description      String             @db.Text
  duration         Int
  created_at       DateTime           @default(now())
  Courses_Students Courses_Students[]
  Users            Users?             @relation(fields: [user_id], references: [id])
  user_id          String?

  @@index([user_id])
  @@map("courses")
}

model Courses_Students {
  id         String   @id @unique @default(uuid())
  created_at DateTime @default(now())

  student_id String
  Students   Students @relation(fields: [student_id], references: [id])
  courses_id String
  Courses    Courses  @relation(fields: [courses_id], references: [id])

  @@index([student_id])
  @@index([courses_id])
  @@map("courses_students")
}
